% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/testDA.R
\name{testDA}
\alias{testDA}
\title{Comparing differential abundance methods by FPR and AUC}
\usage{
testDA(count_table, predictor, R = 3, tests = c("anc", "per", "bay", "adx",
  "enn", "wil", "ttt", "ltt", "ltt2", "neb", "erq", "ere", "msf", "zig", "ds2"),
  spikeMethod = "mult", effectSize = 2, k = 5, cores = (detectCores() -
  1), rng.seed = 123, p.adj = "fdr", delta1 = 1, delta2 = 0.001,
  noOfIterations = 10000, margin = 50, testStat = function(case, control)
  {     log((mean(case) + 1)/(mean(control) + 1)) }, mc.samples = 64,
  sig = 0.05, multcorr = 3, tau = 0.02, theta = 0.1, repeated = FALSE,
  TMM.option = 1)
}
\arguments{
\item{count_table}{Matrix or data.frame. Table with taxa/genes as rows and samples as columns}

\item{predictor}{Factor. The outcome of interest. Should have two levels, e.g. case and control}

\item{R}{Integer. Number of times to run the tests. Default 3}

\item{tests}{Character. Which tests to include. Default all}

\item{spikeMethod}{Character. Multiplicative ("mult") or additive ("add") spike-in. Default "mult"}

\item{effectSize}{Integer. The effect size for the spike-ins. Default 2}

\item{k}{Integer. Number of OTUs to spike in each tertile. k=5: 15 OTUs in total. Default 5}

\item{cores}{Integer. Number of cores to use for parallel computing. Default one less than available}

\item{rng.seed}{Numeric. Seed for reproducibility. Default 123}

\item{p.adj}{Character. Method for pvalue adjustment. Default "fdr"}

\item{delta1}{Numeric. The pseudocount for the Log t.test method. Default 1}

\item{delta2}{Numeric. The pseudocount for the Log t.test2 method. Default 0.001}

\item{noOfIterations}{Integer. How many iterations should be run for the permutation test. Default 10000}

\item{margin}{Integer. The margin of when to stop iterating for non-significant OTUs for the permutation test. Default 50}

\item{testStat}{Function. The test statistic function for the permutation test (also in output of ttt, ltt, ltt2 and wil). Should take two vectors as arguments. Default is a log fold change: log((mean(case abundances)+1)/(mean(control abundances)+1))}

\item{mc.samples}{Integer. Monte Carlo samples for ALDEx2. Default 64}

\item{sig}{Numeric. Alpha used in ANCOM. Default 0.05}

\item{multcorr}{Integer. Correction used in ANCOM. Default 3 (no correction)}

\item{tau}{Numeric. Tuning parameter for ANCOM. Default 0.02}

\item{theta}{Numeric. Tuning parameter for ANCOM. Default 0.1}

\item{repeated}{Logical. Are there repeated measures? Only for ANCOM. Default FALSE}

\item{TMM.option}{1 or 2. For "enn". Option of "1" is for an approach using the mean of the    effective library sizes as a reference library size in TMM normalization; option "2" represents an approach to regenerating counts with a common dispersion. Default 1}
}
\value{
An object of class DA, which contains a list of results:
\itemize{
 \item table - FPR, AUC and spike detection rate for each run
 \item results - A complete list of output from all the methods. Example: Get wilcoxon results from 2. run as such: $results[[2]]["wil"]
}
}
\description{
Calculating false positive rates and AUC for various differential abundance methods
}
\details{
Currently implemented methods:
\itemize{
 \item per - Permutation test with user defined test statistic
 \item bay - baySeq
 \item adx - ALDEx t-test and wilcoxon
 \item wil - Wilcoxon Rank Sum on relative abundances
 \item ttt - Welch t.test on relative abundances
 \item ltt - Welch t.test, but reads are first transformed with log(abundance + delta1) then turned into relative abundances
 \item ltt2 - Welch t.test, but with relative abundances transformed with log(relative abundance + delta2)
 \item neb - Negative binomial GLM with log of library size as offset
 \item erq - EdgeR - Quasi likelihood
 \item ere - EdgeR - Exact test
 \item msf - MetagenomeSeq feature model
 \item zig - MetagenomeSeq zero-inflated gaussian
 \item ds2 - DESeq2
 \item enn - ENNB: Two-stage procedure from https://cals.arizona.edu/~anling/software.htm
 \item anc - ANCOM. This test does not output pvalues; for comparison with the other methods, detected OTUs are set to a pvalue of 0, all else are set to 1.
}
Is it too slow? Remove "anc" from test argument
"per" is also somewhat slow, but is usually one of the methods performing well.
}
